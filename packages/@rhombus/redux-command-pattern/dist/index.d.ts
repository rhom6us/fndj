import { CommandFn, CommandFnAny, createCommandHandler, InferStore, Store } from './command-fn';
import { EventTypes } from './event-creator';
import { Reducer } from './external/redux';
import { InferState, ReducerFn, ReducerFnAny } from './reducer-fn';
import { DeepDictionary, DeepDictionaryItem } from './utils';
export { StandardEvent, StandardEventAny } from './standard-event';
export { CommandFn, createCommandHandler };
export { ReducerFn };
export declare function parseReducers<TReducers extends DeepDictionaryItem<ReducerFnAny>>(reducers: TReducers): readonly [Reducer<InferState<TReducers>, TReducers extends ReducerFnAny ? import("./standard-event").StandardEvent<import("./reducer-fn").InferPayload<TReducers>, ""> : TReducers extends DeepDictionary<ReducerFnAny> ? { [K in keyof TReducers]: TReducers[K] extends ReducerFnAny ? import("./standard-event").StandardEvent<import("./reducer-fn").InferPayload<TReducers[K]>, K> : TReducers[K] extends DeepDictionary<ReducerFnAny> ? { [K_1 in keyof TReducers[K]]: TReducers[K][K_1] extends ReducerFnAny ? import("./standard-event").StandardEvent<import("./reducer-fn").InferPayload<TReducers[K][K_1]>, K extends "" ? K_1 : `${K}.${import("@rhombus/type-helpers").Cast<K_1, string>}`> : TReducers[K][K_1] extends DeepDictionary<ReducerFnAny> ? { [K_2 in keyof TReducers[K][K_1]]: TReducers[K][K_1][K_2] extends ReducerFnAny ? import("./standard-event").StandardEvent<import("./reducer-fn").InferPayload<TReducers[K][K_1][K_2]>, (K extends "" ? K_1 : `${K}.${import("@rhombus/type-helpers").Cast<K_1, string>}`) extends "" ? K_2 : `${K extends "" ? K_1 : `${K}.${import("@rhombus/type-helpers").Cast<K_1, string>}`}.${import("@rhombus/type-helpers").Cast<K_2, string>}`> : TReducers[K][K_1][K_2] extends DeepDictionary<ReducerFnAny> ? { [K_3 in keyof TReducers[K][K_1][K_2]]: TReducers[K][K_1][K_2][K_3] extends ReducerFnAny ? import("./standard-event").StandardEvent<import("./reducer-fn").InferPayload<TReducers[K][K_1][K_2][K_3]>, ((K extends "" ? K_1 : `${K}.${import("@rhombus/type-helpers").Cast<K_1, string>}`) extends "" ? K_2 : `${K extends "" ? K_1 : `${K}.${import("@rhombus/type-helpers").Cast<K_1, string>}`}.${import("@rhombus/type-helpers").Cast<K_2, string>}`) extends "" ? K_3 : `${(K extends "" ? K_1 : `${K}.${import("@rhombus/type-helpers").Cast<K_1, string>}`) extends "" ? K_2 : `${K extends "" ? K_1 : `${K}.${import("@rhombus/type-helpers").Cast<K_1, string>}`}.${import("@rhombus/type-helpers").Cast<K_2, string>}`}.${import("@rhombus/type-helpers").Cast<K_3, string>}`> : TReducers[K][K_1][K_2][K_3] extends DeepDictionary<ReducerFnAny> ? { [K_4 in keyof TReducers[K][K_1][K_2][K_3]]: never; }[keyof TReducers[K][K_1][K_2][K_3]] : never; }[keyof TReducers[K][K_1][K_2]] : never; }[keyof TReducers[K][K_1]] : never; }[keyof TReducers[K]] : never; }[keyof TReducers] : never>, import("./event-creator").EventCreatorOrMap<TReducers, "">];
export declare function getCommandParsers<Commands extends DeepDictionary<CommandFnAny>>(implementation: Commands): readonly [(store: InferStore<Commands>) => import("./command-fn").CommandHandler<import("./command-fn").InferPayload<Commands>>, (handler: import("./command-fn").CommandHandler<import("./command-fn").InferPayload<Commands>>) => Commands extends CommandFnAny ? import("./command-creator").CommandCreator<Commands> : Commands extends Record<string, any> ? { [K in keyof Commands]: Commands[K] extends CommandFnAny ? import("./command-creator").CommandCreator<Commands[K]> : Commands[K] extends Record<string, any> ? { [K_1 in keyof Commands[K]]: Commands[K][K_1] extends CommandFnAny ? import("./command-creator").CommandCreator<Commands[K][K_1]> : Commands[K][K_1] extends Record<string, any> ? { [K_2 in keyof Commands[K][K_1]]: Commands[K][K_1][K_2] extends CommandFnAny ? import("./command-creator").CommandCreator<Commands[K][K_1][K_2]> : Commands[K][K_1][K_2] extends Record<string, any> ? { [K_3 in keyof Commands[K][K_1][K_2]]: Commands[K][K_1][K_2][K_3] extends CommandFnAny ? import("./command-creator").CommandCreator<Commands[K][K_1][K_2][K_3]> : Commands[K][K_1][K_2][K_3] extends Record<string, any> ? { [K_4 in keyof Commands[K][K_1][K_2][K_3]]: Commands[K][K_1][K_2][K_3][K_4] extends CommandFnAny ? import("./command-creator").CommandCreator<Commands[K][K_1][K_2][K_3][K_4]> : Commands[K][K_1][K_2][K_3][K_4] extends Record<string, any> ? { [K_5 in keyof Commands[K][K_1][K_2][K_3][K_4]]: Commands[K][K_1][K_2][K_3][K_4][K_5] extends CommandFnAny ? import("./command-creator").CommandCreator<Commands[K][K_1][K_2][K_3][K_4][K_5]> : Commands[K][K_1][K_2][K_3][K_4][K_5] extends Record<string, any> ? { [K_6 in keyof Commands[K][K_1][K_2][K_3][K_4][K_5]]: Commands[K][K_1][K_2][K_3][K_4][K_5][K_6] extends CommandFnAny ? import("./command-creator").CommandCreator<Commands[K][K_1][K_2][K_3][K_4][K_5][K_6]> : Commands[K][K_1][K_2][K_3][K_4][K_5][K_6] extends Record<string, any> ? { [K_7 in keyof Commands[K][K_1][K_2][K_3][K_4][K_5][K_6]]: Commands[K][K_1][K_2][K_3][K_4][K_5][K_6][K_7] extends CommandFnAny ? import("./command-creator").CommandCreator<Commands[K][K_1][K_2][K_3][K_4][K_5][K_6][K_7]> : Commands[K][K_1][K_2][K_3][K_4][K_5][K_6][K_7] extends Record<string, any> ? { [K_8 in keyof Commands[K][K_1][K_2][K_3][K_4][K_5][K_6][K_7]]: Commands[K][K_1][K_2][K_3][K_4][K_5][K_6][K_7][K_8] extends CommandFnAny ? import("./command-creator").CommandCreator<Commands[K][K_1][K_2][K_3][K_4][K_5][K_6][K_7][K_8]> : Commands[K][K_1][K_2][K_3][K_4][K_5][K_6][K_7][K_8] extends Record<string, any> ? { [K_9 in keyof Commands[K][K_1][K_2][K_3][K_4][K_5][K_6][K_7][K_8]]: Commands[K][K_1][K_2][K_3][K_4][K_5][K_6][K_7][K_8][K_9] extends CommandFnAny ? import("./command-creator").CommandCreator<Commands[K][K_1][K_2][K_3][K_4][K_5][K_6][K_7][K_8][K_9]> : Commands[K][K_1][K_2][K_3][K_4][K_5][K_6][K_7][K_8][K_9] extends Record<string, any> ? { [K_10 in keyof Commands[K][K_1][K_2][K_3][K_4][K_5][K_6][K_7][K_8][K_9]]: any; } : never; } : never; } : never; } : never; } : never; } : never; } : never; } : never; } : never; } : never; } : never];
export declare function getEverything<TReducers extends DeepDictionaryItem<ReducerFnAny>, Commands extends DeepDictionary<CommandFn<InferState<TReducers>, any, EventTypes<TReducers>>>>(reducers: TReducers, commandImplementation: Commands, createStore: (reducer: Reducer<InferState<TReducers>, EventTypes<TReducers>>) => Store<InferState<TReducers>, EventTypes<TReducers>>): (import("./command-creator").CommandCreator<CommandFnAny> | {
    [x: string]: import("./command-creator").CommandCreator<CommandFnAny> | any;
} | Store<InferState<TReducers>, TReducers extends ReducerFnAny ? import("./standard-event").StandardEvent<import("./reducer-fn").InferPayload<TReducers>, ""> : TReducers extends DeepDictionary<ReducerFnAny> ? { [K in keyof TReducers]: TReducers[K] extends ReducerFnAny ? import("./standard-event").StandardEvent<import("./reducer-fn").InferPayload<TReducers[K]>, K> : TReducers[K] extends DeepDictionary<ReducerFnAny> ? { [K_1 in keyof TReducers[K]]: TReducers[K][K_1] extends ReducerFnAny ? import("./standard-event").StandardEvent<import("./reducer-fn").InferPayload<TReducers[K][K_1]>, K extends "" ? K_1 : `${K}.${import("@rhombus/type-helpers").Cast<K_1, string>}`> : TReducers[K][K_1] extends DeepDictionary<ReducerFnAny> ? { [K_2 in keyof TReducers[K][K_1]]: TReducers[K][K_1][K_2] extends ReducerFnAny ? import("./standard-event").StandardEvent<import("./reducer-fn").InferPayload<TReducers[K][K_1][K_2]>, (K extends "" ? K_1 : `${K}.${import("@rhombus/type-helpers").Cast<K_1, string>}`) extends "" ? K_2 : `${K extends "" ? K_1 : `${K}.${import("@rhombus/type-helpers").Cast<K_1, string>}`}.${import("@rhombus/type-helpers").Cast<K_2, string>}`> : TReducers[K][K_1][K_2] extends DeepDictionary<ReducerFnAny> ? { [K_3 in keyof TReducers[K][K_1][K_2]]: TReducers[K][K_1][K_2][K_3] extends ReducerFnAny ? import("./standard-event").StandardEvent<import("./reducer-fn").InferPayload<TReducers[K][K_1][K_2][K_3]>, ((K extends "" ? K_1 : `${K}.${import("@rhombus/type-helpers").Cast<K_1, string>}`) extends "" ? K_2 : `${K extends "" ? K_1 : `${K}.${import("@rhombus/type-helpers").Cast<K_1, string>}`}.${import("@rhombus/type-helpers").Cast<K_2, string>}`) extends "" ? K_3 : `${(K extends "" ? K_1 : `${K}.${import("@rhombus/type-helpers").Cast<K_1, string>}`) extends "" ? K_2 : `${K extends "" ? K_1 : `${K}.${import("@rhombus/type-helpers").Cast<K_1, string>}`}.${import("@rhombus/type-helpers").Cast<K_2, string>}`}.${import("@rhombus/type-helpers").Cast<K_3, string>}`> : TReducers[K][K_1][K_2][K_3] extends DeepDictionary<ReducerFnAny> ? { [K_4 in keyof TReducers[K][K_1][K_2][K_3]]: never; }[keyof TReducers[K][K_1][K_2][K_3]] : never; }[keyof TReducers[K][K_1][K_2]] : never; }[keyof TReducers[K][K_1]] : never; }[keyof TReducers[K]] : never; }[keyof TReducers] : never> | import("./event-creator").EventCreatorOrMap<TReducers, "">)[];

{"version":3,"file":"reducer-fn.js","sourceRoot":"","sources":["../src/reducer-fn.ts"],"names":[],"mappings":"","sourcesContent":["\nimport { Func } from '@rhombus/func';\nimport { restify } from '@rhombus/type-helpers';\nimport { DeepDictionaryItem, DeepRecord, DeepRecordItem } from './utils';\n\nexport type ReducerFn<TState = any, TPayload = undefined> = (\n  state: TState,\n  ...payload: restify<TPayload>\n) => TState;\nexport type ReducerFnAny = ReducerFn<any, any>;\n\nexport type InferState<T extends DeepDictionaryItem<ReducerFn<any, any>>> =\n  T extends DeepDictionaryItem<ReducerFn<infer TState, any>> ? TState\n  : { ERROR: { T: T; }; };\n\n\nexport type InferPayload<TMap extends DeepRecordItem<string, ReducerFnAny>> =\n  TMap extends Func<[any, ...infer TPayload], any> ? TPayload :\n  TMap extends DeepRecord<string, ReducerFnAny> ? {\n    [K in keyof TMap]: InferPayload<TMap[K]>\n  }[keyof TMap] :\n  never;\n"]}
{"version":3,"file":"createReducer.js","sourceRoot":"","sources":["../src/createReducer.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,uBAAuB,CAAC;AAIhD,OAAO,EAAkB,UAAU,EAAE,MAAM,SAAS,CAAC;AAGrD,MAAM,UAAU,aAAa,CAAyC,QAAW;IAE/E,MAAM,OAAO,GAAQ,UAAU,CAAC,QAAQ,CAAC,CAAC;IAC1C,OAAO,SAAS,aAAa,CAAC,KAAK,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE;QACpD,IAAI,KAAK,KAAK,SAAS,EAAE;YACvB,MAAM,IAAI,SAAS,CAAC,8FAA8F,CAAC,CAAC;SACrH;QACD,IAAI,CAAC,CAAC,IAAI,IAAI,OAAO,CAAC,EAAE;YACtB,sCAAsC;YACtC,OAAO,CAAC,IAAI,CAAC,iCAAiC,IAAI,EAAE,CAAC,CAAC;YACtD,OAAO,KAAK,CAAC;SACd;QACD,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,GAAG,OAAO,CAAC,OAAc,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC;AACJ,CAAC","sourcesContent":["import { restify } from '@rhombus/type-helpers';\r\nimport { EventTypes } from './event-creator';\r\nimport { Reducer as ReduxReducer } from './external/redux';\r\nimport { ReducerFnAny } from './reducer-fn';\r\nimport { DeepDictionary, flattenMap } from './utils';\r\n\r\n\r\nexport function createReducer<T extends DeepDictionary<ReducerFnAny>>(reducers: T): ReduxReducer</*InferState<T>*/any, EventTypes<T>> {\r\n\r\n  const flatMap: any = flattenMap(reducers);\r\n  return function rootReducerfn(state, { type, payload }) {\r\n    if (state === undefined) {\r\n      throw new TypeError('redux-command-pattern does not support undefined state. Please preload with an initial state');\r\n    }\r\n    if (!(type in flatMap)) {\r\n      // eslint-disable-next-line no-console\r\n      console.warn(`reducer not found for action: ${type}`);\r\n      return state;\r\n    }\r\n    return flatMap[type](state, ...restify(payload as any));\r\n  };\r\n}\r\n"]}
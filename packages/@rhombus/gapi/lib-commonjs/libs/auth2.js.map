{"version":3,"file":"auth2.js","sourceRoot":"","sources":["../../src/libs/auth2.ts"],"names":[],"mappings":";AAAA,8BAA8B;AAC9B,oCAAoC;AACpC,qCAAqC;AACrC,6CAA6C;;;AAE7C,0CAAuC;AACvC,kCAAkC;AAIlC,CAAC;AAED,IAAI,KAA6B,CAAC;AAClC,MAAM,GAAG,GAAG,IAAA,aAAK,GAAc,CAAC;AACzB,KAAK,UAAU,QAAQ,CAAC,SAAkB,EAAE,GAAG,MAAgB;IAClE,IAAI,CAAC,SAAS,EAAE;QACZ,IAAI,CAAC,KAAK,EAAE;YACR,OAAO,MAAM,GAAG,CAAC,OAAO,CAAC;SAC5B;QACD,OAAO,KAAK,CAAC;KAChB;IACD,qDAAqD;IACrD,MAAM,MAAM,GAAG,KAAK,KAAK,MAAM,IAAI,OAAO,CAAa,KAAK,EAAC,OAAO,EAAC,EAAE;QAEnE,MAAM,KAAK,GAAG,MAAM,IAAA,cAAO,EAAC,OAAO,CAAC,CAAC;QAErC,MAAM,YAAY,GAAG,KAAK,CAAC,eAAe,EAAE,IAAI,KAAK,CAAC,IAAI,CAAC;YACvD,SAAS,EAAC,+EAA+E;YACzF,2BAA2B;SAC9B,CAAC,CAAC;QACH,YAAY,CAAC,IAAI,CAAC,CAAC,CAAuB,EAAE,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;IAC7E,CAAC,CAAC,CAAC;IAEH,OAAO,MAAM,GAAG,CAAC,OAAO,CAAC,KAAK,GAAG,EAAC,GAAG,MAAM,EAAC,CAAC,CAAC;AAClD,CAAC;AApBD,4BAoBC;AAED,SAAS,IAAI,CAAuB,MAAS,EAAE,GAAG,IAAS;IACvD,KAAK,MAAM,GAAG,IAAI,IAAI,EAAE;QACpB,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC;KACtB;IACD,OAAO,MAAM,CAAC;AAClB,CAAC","sourcesContent":["/// <reference types=\"gapi\" />\n/// <reference types=\"gapi.auth2\" />\n/// <reference types=\"gapi.client\" />\n/// <reference types=\"gapi.client.youtube\" />\n\nimport { defer } from '@rhombus/defer';\nimport { loadLib } from '../gapi';\nexport type GoogleAuth = Omit<gapi.auth2.GoogleAuth, 'then'>;\nexport type GoogleUser = gapi.auth2.GoogleUser;\n\n;\n\nlet cache: GoogleAuth | undefined;\nconst def = defer<GoogleAuth>();\nexport async function getAuth2(client_id?: string, ...scopes: string[]): Promise<GoogleAuth> {\n    if (!client_id) {\n        if (!cache) {\n            return await def.promise;\n        }\n        return cache;\n    }\n    // eslint-disable-next-line no-async-promise-executor\n    const result = cache ??= await new Promise<GoogleAuth>(async resolve => {\n\n        const auth2 = await loadLib('auth2');\n\n        const auth2Promise = auth2.getAuthInstance() ?? auth2.init({\n            client_id,//: \"725047741145-anp1d89o2hf63g72h8hpjo3tte9so6f5.apps.googleusercontent.com\",\n            // scope: scopes.join(' '),\n        });\n        auth2Promise.then((p:gapi.auth2.GoogleAuth) => resolve(omit(p, 'then')));\n    });\n    \n    return await def.resolve(cache = {...result});\n}\n\nfunction omit<T, K extends keyof T>(source: T, ...keys: K[]): Omit<T, K> {\n    for (const key of keys) {\n        delete source[key];\n    }\n    return source;\n}\n"]}
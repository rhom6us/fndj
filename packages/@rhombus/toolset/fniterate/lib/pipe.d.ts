import { Func } from '@rhombus/func';
declare type MakeSelectorChain<Types extends any[]> = Types extends [infer Source, ...any] ? _MakeSelectorChain<Source, [], Types> : never;
declare type _MakeSelectorChain<Source, mapped extends any[], types extends any[]> = types extends [] ? never : types extends [infer result] ? mapped : types extends [infer pop, infer peek, ...infer rest] ? _MakeSelectorChain<Source, [...mapped, (arg: pop) => peek], [peek, ...rest]> : never;
export declare function pipe<TSource>(source: Iterable<TSource>): Iterable<TSource>;
export declare function pipe<TSource, T0>(source: Iterable<TSource>, ...args: MakeSelectorChain<[TSource, T0]>): Iterable<T0>;
export declare function pipe<TSource, T0, T1>(source: Iterable<TSource>, ...args: MakeSelectorChain<[TSource, T0, T1]>): Iterable<T1>;
export declare function pipe<TSource, T0, T1, T2>(source: Iterable<TSource>, ...args: MakeSelectorChain<[TSource, T0, T1, T2]>): Iterable<T2>;
export declare function pipe<TSource, T0, T1, T2, T3>(source: Iterable<TSource>, ...args: MakeSelectorChain<[TSource, T0, T1, T2, T3]>): Iterable<T3>;
export declare function pipe<TSource, T0, T1, T2, T3, T4>(source: Iterable<TSource>, ...args: MakeSelectorChain<[TSource, T0, T1, T2, T3, T4]>): Iterable<T4>;
export declare function pipe<TSource, T0, T1, T2, T3, T4, T5>(source: Iterable<TSource>, ...args: MakeSelectorChain<[TSource, T0, T1, T2, T3, T4, T5]>): Iterable<T5>;
export declare function pipe<TSource, T0, T1, T2, T3, T4, T5, T6>(source: Iterable<TSource>, ...args: MakeSelectorChain<[TSource, T0, T1, T2, T3, T4, T5, T6]>): Iterable<T6>;
export declare function pipe<TSource, T0, T1, T2, T3, T4, T5, T6, T7>(source: Iterable<TSource>, ...args: MakeSelectorChain<[TSource, T0, T1, T2, T3, T4, T5, T6, T7]>): Iterable<T7>;
export declare function pipe<TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8>(source: Iterable<TSource>, ...args: MakeSelectorChain<[TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8]>): Iterable<T8>;
export declare function pipe<TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9>(source: Iterable<TSource>, ...args: MakeSelectorChain<[TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9]>): Iterable<T9>;
export declare function pipe<TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(source: Iterable<TSource>, ...args: MakeSelectorChain<[TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10]>): Iterable<T10>;
export declare function pipe<TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(source: Iterable<TSource>, ...args: MakeSelectorChain<[TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11]>): Iterable<T11>;
export declare function pipe<TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(source: Iterable<TSource>, ...args: MakeSelectorChain<[TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12]>): Iterable<T12>;
export declare function pipe<TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(source: Iterable<TSource>, ...args: MakeSelectorChain<[TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13]>): Iterable<T13>;
export declare function pipe<TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(source: Iterable<TSource>, ...args: MakeSelectorChain<[TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14]>): Iterable<T14>;
export declare function pipe<TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(source: Iterable<TSource>, ...args: MakeSelectorChain<[TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15]>): Iterable<T15>;
export declare function pipe<TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(source: Iterable<TSource>, ...args: MakeSelectorChain<[TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]>): Iterable<T16>;
export declare function pipe<TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(source: Iterable<TSource>, ...args: MakeSelectorChain<[TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17]>): Iterable<T17>;
export declare function pipe<TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(source: Iterable<TSource>, ...args: MakeSelectorChain<[TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18]>): Iterable<T18>;
export declare function pipe<TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(source: Iterable<TSource>, ...args: MakeSelectorChain<[TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19]>): Iterable<T19>;
export declare function pipe<TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(source: Iterable<TSource>, ...args: MakeSelectorChain<[TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20]>): Iterable<T20>;
export declare function pipe<TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(source: Iterable<TSource>, ...args: MakeSelectorChain<[TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21]>): Iterable<T21>;
export declare function pipe<TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(source: Iterable<TSource>, ...args: MakeSelectorChain<[TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22]>): Iterable<T22>;
export declare function pipe<TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(source: Iterable<TSource>, ...args: MakeSelectorChain<[TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23]>): Iterable<T23>;
export declare function pipe<TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(source: Iterable<TSource>, ...args: MakeSelectorChain<[TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24]>): Iterable<T24>;
export declare function pipe<TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(source: Iterable<TSource>, ...args: MakeSelectorChain<[TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25]>): Iterable<T25>;
export declare function pipe<TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(source: Iterable<TSource>, ...args: MakeSelectorChain<[TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26]>): Iterable<T26>;
export declare function pipe<TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(source: Iterable<TSource>, ...args: MakeSelectorChain<[TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27]>): Iterable<T27>;
export declare function pipe<TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(source: Iterable<TSource>, ...args: MakeSelectorChain<[TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28]>): Iterable<T28>;
export declare function pipe<TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(source: Iterable<TSource>, ...args: MakeSelectorChain<[TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29]>): Iterable<T29>;
export declare function pipe<TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(source: Iterable<TSource>, ...args: MakeSelectorChain<[TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30]>): Iterable<T30>;
export declare function pipe<TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(source: Iterable<TSource>, ...args: MakeSelectorChain<[TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31]>): Iterable<T31>;
export declare function pipe<TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(source: Iterable<TSource>, ...args: MakeSelectorChain<[TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32]>): Iterable<T32>;
export declare function pipe<TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33>(source: Iterable<TSource>, ...args: MakeSelectorChain<[TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33]>): Iterable<T33>;
export declare function pipe<TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34>(source: Iterable<TSource>, ...args: MakeSelectorChain<[TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34]>): Iterable<T34>;
export declare function pipe<TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35>(source: Iterable<TSource>, ...args: MakeSelectorChain<[TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35]>): Iterable<T35>;
export declare function pipe<TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36>(source: Iterable<TSource>, ...args: MakeSelectorChain<[TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36]>): Iterable<T36>;
export declare function pipe<TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37>(source: Iterable<TSource>, ...args: MakeSelectorChain<[TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37]>): Iterable<T37>;
export declare function pipe<TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38>(source: Iterable<TSource>, ...args: MakeSelectorChain<[TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38]>): Iterable<T38>;
export declare function pipe<TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39>(source: Iterable<TSource>, ...args: MakeSelectorChain<[TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39]>): Iterable<T39>;
export declare function pipe<TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40>(source: Iterable<TSource>, ...args: MakeSelectorChain<[TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40]>): Iterable<T40>;
export declare function pipe<TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41>(source: Iterable<TSource>, ...args: MakeSelectorChain<[TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41]>): Iterable<T41>;
export declare function pipe<TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42>(source: Iterable<TSource>, ...args: MakeSelectorChain<[TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42]>): Iterable<T42>;
export declare function pipe<TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43>(source: Iterable<TSource>, ...args: MakeSelectorChain<[TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43]>): Iterable<T43>;
export declare function pipe<TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44>(source: Iterable<TSource>, ...args: MakeSelectorChain<[TSource, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44]>): Iterable<T44>;
interface Operator<T, R = Iterable<T>> {
    map?: (this: Iterable<T>, p: T) => R;
    reduce?: (this: Iterable<T>, seed: R, current: T) => R;
}
export declare function filter<TSource>(predicate: (this: Iterable<TSource>, item: TSource) => boolean): Operator<TSource>;
export declare function map<TSource, TResult>(selector: (this: Iterable<TSource>, item: TSource) => TResult): Operator<TSource, TResult>;
export declare function first<TSource>(predicate?: (item: TSource) => boolean): Operator<TSource>;
export declare function firstOrDefault<TSource>(defaultValue: TSource, predicate?: (item: TSource) => boolean): (source: Iterable<TSource>) => TSource;
export declare function take<TSource>(count: number): (source: Iterable<TSource>) => Iterable<TSource>;
export declare function count<TSource>(): (source: Iterable<TSource>) => number;
export declare function toArray<TSource>(): (source: Iterable<TSource>) => TSource[];
export declare function single<TSource>(predicate?: (this: Iterable<TSource>, item: TSource) => boolean): Func<[Iterable<TSource>], TSource>;
export declare function singleOrDefault<TSource>(defaultValue: TSource, predicate?: (item: TSource) => boolean): (source: Iterable<TSource>) => TSource;
export {};
//# sourceMappingURL=pipe.d.ts.map
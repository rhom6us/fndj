{"version":3,"file":"is-async-generator.js","sourceRoot":"","sources":["../../src/iterables/is-async-generator.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,eAAe,EAAE,MAAM,qBAAqB,CAAC;AAEtD,MAAM,sBAAsB,GAAG,CAAC,KAAK,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,WAAqC,CAAC;AAChG,MAAM,UAAU,gBAAgB,CAAC,KAAU;IACzC,IAAI,KAAK,EAAE,WAAW,KAAK,sBAAsB;QAC/C,OAAO,IAAI,CAAC;IACd,IAAI,oBAAoB,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAClE,OAAO,IAAI,CAAC;IACd,OAAO,eAAe,CAAC,KAAK,CAAC,IAAI,KAAK,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC,CAAC;AAC7D,CAAC","sourcesContent":["import { isAsyncIterator } from \"./is-async-iterator\";\r\n\r\nconst AsyncGeneratorFunction = (async function* () { }()).constructor as AsyncGeneratorFunction;\r\nexport function isAsyncGenerator(value: any): value is AsyncGenerator<any, any, any> {\r\n  if (value?.constructor === AsyncGeneratorFunction)\r\n    return true;\r\n  if (/\\bAsyncGenerator\\b/.test(Object.prototype.toString.call(value)))\r\n    return true;\r\n  return isAsyncIterator(value) && value?.next?.length === 1;\r\n}\r\n"]}
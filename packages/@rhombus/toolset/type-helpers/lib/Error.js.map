{"version":3,"file":"Error.js","sourceRoot":"","sources":["../src/Error.ts"],"names":[],"mappings":"","sourcesContent":["\n\nexport type Error<Kind extends ErrorKind, Source extends PropertyKey, Params extends readonly any[], Message extends string | never = never> = {\n  type: Kind;\n  source: Source;\n  params: Params;\n  message?: `Ruh Roh! ${Message}\\n\\nLoser.`;\n\n};\ntype ErrorKind = 'INVALID_TYPE_ARG' | 'NEVER_CONDITION';\nexport type InvalidTypeArg<Source extends PropertyKey, Params extends readonly any[] | never = never, Message extends string | never = never> = Error<'INVALID_TYPE_ARG', Source, Params, Message>;\nexport type AssertNever<Source extends PropertyKey, Params extends readonly any[] | never = never, Message extends string | never = never> = Error<'NEVER_CONDITION', Source, Params, Message>;\n\n"]}
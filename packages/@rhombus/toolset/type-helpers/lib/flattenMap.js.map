{"version":3,"file":"flattenMap.js","sourceRoot":"","sources":["../src/flattenMap.ts"],"names":[],"mappings":"AAYA,MAAM,UAAU,UAAU,CAAiC,GAAM;IAC/D,MAAM,MAAM,GAAQ,EAAE,CAAC;IACvB,MAAM,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IAClC,OAAO,KAAK,CAAC,MAAM,EAAE;QACnB,MAAM,CAAC,MAAM,EAAE,QAAQ,CAAC,GAAG,KAAK,CAAC,GAAG,EAAG,CAAC;QACxC,IAAI,OAAO,QAAQ,KAAK,UAAU,EAAE;YAClC,MAAM,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC;SAC3B;aAAM;YACL,KAAK,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;gBAC/C,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;aACpC;SACF;KACF;IACD,OAAO,MAAM,CAAC;AAChB,CAAC;AAED,SAAS,IAAI,CAAC,GAAG,IAAc;IAC7B,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACxC,CAAC","sourcesContent":["import { Func } from '@rhombus/func';\nimport { Cast } from './cast';\nimport { Inc } from './counter';\nimport { DeepDictionary, DeepDictionaryItem } from './deep-record';\nimport { fromEntries } from './obj';\ntype _flattenMap<T extends DeepDictionaryItem<Func>, prefix extends string = '', CurrentDepth extends number = 0> =\n  CurrentDepth extends 10 ? never :\n  T extends DeepDictionary<Func> ? {\n    [K in keyof T]: _flattenMap<T[K], prefix extends '' ? K : `${prefix}.${Cast<K, string>}`, Inc<CurrentDepth>>\n  }[keyof T] : [prefix, T]\n\nexport type flattenMap<T extends DeepDictionary<Func>> = fromEntries<_flattenMap<T>>;\nexport function flattenMap<T extends DeepDictionary<Func>>(map: T): flattenMap<T> {\n  const result: any = {};\n  const stack = Object.entries(map);\n  while (stack.length) {\n    const [prefix, mapOrFun] = stack.pop()!;\n    if (typeof mapOrFun === 'function') {\n      result[prefix] = mapOrFun;\n    } else {\n      for (const [key, p] of Object.entries(mapOrFun)) {\n        stack.push([join(prefix, key), p]);\n      }\n    }\n  }\n  return result;\n}\n\nfunction join(...args: string[]): string {\n  return args.filter(Boolean).join(\".\");\n}\n"]}
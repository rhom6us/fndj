{"version":3,"file":"Singleton.alt.js","sourceRoot":"","sources":["../src/Singleton.alt.ts"],"names":[],"mappings":"AAGA,MAAM,GAAG,GAAG,IAAI,OAAO,EAAa,CAAC;AACrC,MAAM,OAAO,SAAS;IAClB,KAAK,CAAI;IACT,QAAQ,CAAqB;IAE7B,QAAQ;QACJ,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;YACtB,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;SACxC;QACD,OAAO,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC/B,CAAC;IAID,YAAY,IAAO,EAAE,GAAQ;QACzB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,QAAQ,GAAG,OAAO,GAAG,KAAK,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC;IAChE,CAAC;IAED,wDAAwD;IACxD,MAAM,CAAC,GAAG,CAA+C,QAAmB;QACxE,OAAO,IAAI,SAAS,CAAC,QAAQ,CAAC,WAAqC,EAAE,QAAQ,CAAC,CAAC;IACnF,CAAC;CACJ","sourcesContent":["import { Ctor, Func } from '@rhombus/func';\ntype InstanceFactory<T extends Ctor> = Func<[], InstanceType<T>>;\n\nconst map = new WeakMap<Ctor, any>();\nexport class Singleton<T extends Ctor> {\n    #type: T;\n    #factory: InstanceFactory<T>;\n\n    instance(): InstanceType<T> {\n        if (!map.has(this.#type)) {\n            map.set(this.#type, this.#factory());\n        }\n        return map.get(this.#type);\n    }\n\n    constructor(type: T, instance: InstanceType<T>);\n    constructor(type: T, factory: InstanceFactory<T>);\n    constructor(type: T, arg: any) {\n        this.#type = type;\n        this.#factory = typeof arg === 'function' ? arg : () => arg;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    static for<TInstance extends { constructor: Function; }>(instance: TInstance) {\n        return new Singleton(instance.constructor as Ctor<any[], TInstance>, instance);\n    }\n}\n"]}
{"version":3,"file":"Authenticate.js","sourceRoot":"","sources":["../src/Authenticate.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Action } from '@rhombus/func';\nimport { getAuth2, GoogleAuth, GoogleUser } from '@rhombus/gapi';\nimport { usePromise } from '@rhombus/react';\nimport React, { Children, createContext, ReactNode, useCallback, useContext, useEffect, useMemo, useState } from 'react';\n\ninterface Children {\n    children?: ReactNode;\n}\ninterface Props extends Children {\n    clientId: string;\n    onLogin?: Action<[GoogleUser]>;\n}\n\nfunction ResultRoot({ children }: Children) {\n    return <section>{children}</section>;\n};\n\nconst AuthenticateContext = createContext<GoogleUser | null>(null);\nexport const useGoogleUser = () => useContext(AuthenticateContext);\nexport function Authenticate(props: Props) {\n    const [ready, auth2] = usePromise(() => getAuth2(props.clientId), [props.clientId]);\n\n    if (!ready) {\n        return (\n            <ResultRoot >\n                <p>auth2 loading.......</p>\n            </ResultRoot >\n        );\n    }\n    return <Authenticate_Internal {...props} auth2={auth2!} />;\n};\n\nfunction Authenticate_Internal({ children, auth2, onLogin }: Props & { auth2: GoogleAuth; }) {\n    const [loginError, setLoginError] = useState<string>();\n    const [isLoggedIn, setIsLoggedIn] = useState(auth2.isSignedIn.get());\n    const [user, setUser] = useState(auth2.currentUser.get());\n    useEffect(() => {\n        setIsLoggedIn(auth2.isSignedIn.get());\n        setUser(auth2.currentUser.get());\n\n        let stop = false;\n        auth2.isSignedIn.listen(p => !stop && setIsLoggedIn(p));\n        auth2.currentUser.listen(p => !stop && setUser(p));\n        return () => {\n            //TODO: how to stop listening properly instead of this hack?\n\n            //DRAGONS: This is a potential memory leak (sortof). If the component gets\n            //remounted over and over and over again, it will keep leaving\n            //behind these closed over 'stopped' listeners. I do not, however,\n            //believe that this will surmount into any real world issue.\n\n            stop = true;\n        };\n    }, [auth2]);\n\n    const signIn = useCallback(async () => {\n        try {\n            const user = await auth2.signIn({\n                scope: \"https://www.googleapis.com/auth/youtube.readonly\",\n                ux_mode: 'redirect',\n            } as any);\n            onLogin?.(user);\n        } catch (er: any) {\n            setLoginError(er?.error ?? er?.toString() ?? 'unknown error logging into google');\n        }\n    }, [auth2, onLogin]);\n\n    const errorBody = useMemo(()=> <>\n        <h1>Whoops!</h1>\n        <h4>There was an error logging in</h4>\n        <p>{loginError}</p>\n    </>,[loginError]);\n    const notLoggedInBody = useMemo(()=> <button onClick={signIn}>sign in</button>,[signIn]);\n    const successBody = useMemo(() => <AuthenticateContext.Provider value={user}>{children}</AuthenticateContext.Provider>, [user, children]);\n\n    return  loginError ? errorBody :\n            isLoggedIn ? successBody :\n            /* else */   notLoggedInBody;\n\n};\n"]}
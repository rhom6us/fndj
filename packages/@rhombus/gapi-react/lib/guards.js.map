{"version":3,"file":"guards.js","sourceRoot":"","sources":["../src/guards.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,EAAiB,IAAI,EAA2B,MAAM,OAAO,CAAC;AAG5E,MAAM,UAAU,YAAY,CAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAA2H;IAC1L,IAAI,SAAS,CAAC,KAAK,CAAC,EAAE;QAClB,OAAO,0CAAG,MAAM,CAAC,KAAK,CAAC,CAAI,CAAC;KAC/B;IAED,OAAO,0CAAG,QAAQ,CAAI,CAAC;AAC3B,CAAC;AAoCD,2FAA2F;AAC3F,MAAM,UAAU,QAAQ,CAA0B,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,KAAK,EAAgH;IACzM,MAAM,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,YAAY,CAAC,MAAM,EAAE,KAAY,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;IAClE,IAAI,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE;QACpC,OAAO,0CAAG,QAAQ,CAAI,CAAC;KAC1B;IACD,OAAO,oBAAC,KAAK,OAAK,KAAiB,GAAI,CAAC;AAC5C,CAAC;AACD,MAAM,UAAU,YAAY,CAAgC,MAAwB,EAAE,KAAc;IAChG,OAAO,IAAI,CAAC,SAAS,OAAO,CAAC,CAAyB;QAClD,OAAO,oBAAC,MAAM,OAAK,EAAE,GAAG,KAAK,EAAE,GAAG,CAAC,EAAc,GAAI,CAAC;IAC1D,CAAC,CAAC,CAAC;AACP,CAAC;AACD,MAAM,UAAU,SAAS,CAAI,KAA2B;IACpD,OAAO,KAAK,IAAI,IAAI,CAAC;AACzB,CAAC;AAGD,0KAA0K;AAC1K,mDAAmD;AACnD,mBAAmB;AACnB,yCAAyC;AACzC,QAAQ;AAER,8BAA8B;AAC9B,IAAI","sourcesContent":["import React, { ComponentType, memo, ReactElement, ReactNode } from 'react';\r\n\r\n\r\nexport function GuardDefined<T>({ value, children: render, fallback }: { value: T | null | undefined; children: (value: Exclude<T, null | undefined>) => ReactElement; fallback?: ReactNode; }): ReactElement {\r\n    if (isDefined(value)) {\r\n        return <>{render(value)}</>;\r\n    }\r\n\r\n    return <>{fallback}</>;\r\n}\r\n\r\ntype RequiredKeys<T> = { [K in keyof T]-?: Empty extends Pick<T, K> ? never : K }[keyof T];\r\ntype OptionalKeys<T> = { [K in keyof T]-?: Empty extends Pick<T, K> ? K : never }[keyof T];\r\ntype RequiredPart<T> = Pick<T, RequiredKeys<T>>;\r\ntype OptionalPart<T> = Pick<T, OptionalKeys<T>>;\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\ntype Empty = {};\r\ntype NullableKeys<T, ConsiderNulls extends boolean = true> = {\r\n    [K in keyof T]-?:\r\n    undefined extends T[K] ? K :\r\n    null extends T[K] ? (\r\n        ConsiderNulls extends true ? K : never\r\n    ) :\r\n    never\r\n}[keyof T];\r\ntype NonNullableKeys<T, IncludeNull extends boolean = true> = Exclude<keyof T, NullableKeys<T, IncludeNull>>;\r\n\r\ntype NullableRequiredValues<T> = {\r\n    [K in RequiredKeys<T>]: T[K] | undefined | null\r\n} & OptionalPart<T>;\r\ntype NullablePart<T, ConsiderNulls extends boolean = true> = Pick<T, NullableKeys<T, ConsiderNulls>>;\r\ntype NonNullablePart<T, ConsiderNulls extends boolean = true> = Pick<T, NonNullableKeys<T, ConsiderNulls>>;\r\n\r\n\r\n\r\ninterface GuardForProps<P, A> {\r\n\r\n}\r\ntype LeftOvers<P, A> =\r\n    A extends unknown ? P :\r\n    Omit<P, keyof A>;\r\ntype PP<T> = Empty extends T ? T : {\r\n    [P in keyof T]: Exclude<T[P], undefined>;\r\n};\r\n\r\n// function GuardFor<P>(props: GuardForProps<P> & NullableRequiredValues<P>): ReactElement;\r\nexport function GuardFor<P, A extends Partial<P>>({ target: Target, apply, children, ...props }: { target: ComponentType<P>; children?: ReactNode; apply: PP<A>; } & NullableRequiredValues<Omit<P, keyof A>>) {\r\n    const Child = apply ? partialApply(Target, apply as any) : Target;\r\n    if (Object.values(props).some(p => !p)) {\r\n        return <>{children}</>;\r\n    }\r\n    return <Child {...props as any as P} />;\r\n}\r\nexport function partialApply<P, Applied extends Partial<P>>(Target: ComponentType<P>, props: Applied) {\r\n    return memo(function Partial(p: Omit<P, keyof Applied>) {\r\n        return <Target {...{ ...props, ...p } as any as P} />;\r\n    });\r\n}\r\nexport function isDefined<T>(value: T | null | undefined): value is NonNullable<T> {\r\n    return value != null;\r\n}\r\n\r\n\r\n// export function Await<T>({ promise, children: render, fallback }: { promise: Promise<T>; children: (value: T) => ReactElement; fallback?: ReactNode; }): ReactElement {\r\n//     const [ready, result] = usePromise(promise);\r\n//     if (ready) {\r\n//         return <>{render(result!)}</>;\r\n//     }\r\n\r\n//     return <>{fallback}</>;\r\n// }\r\n"]}